-- Đảm bảo game đã load
if not game:IsLoaded() then
    repeat task.wait() until game:IsLoaded()
end

-- Dịch vụ cần dùng
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local MarketplaceService = game:GetService("MarketplaceService")
local player = Players.LocalPlayer

-- Tạo folder nếu chưa có
local folder = "."
if makefolder then
    pcall(function() makefolder(folder) end)
end

-- Hàm lấy tên game
local function getGameName()
    local success, result = pcall(function()
        return MarketplaceService:GetProductInfo(game.PlaceId).Name
    end)
    return success and result or "UNKNOWN"
end

-- Hàm lấy toàn bộ item trong Store (Inventory)
local function getInventoryItems()
    local itemList = {}
    local success, result = pcall(function()
        return ReplicatedStorage.Remotes.CommF_:InvokeServer("getInventory")
    end)
    if success and typeof(result) == "table" then
        for _, item in ipairs(result) do
            if item.Name then
                table.insert(itemList, item.Name)
            end
        end
    end
    return itemList
end

-- Hàm lấy Melee đang trang bị
local function getEquippedMelee()
    local function checkTools(container)
        for _, tool in ipairs(container:GetChildren()) do
            if tool:IsA("Tool") then
                local nameLower = string.lower(tool.Name)
                if tool.ToolTip == "Melee" or nameLower:find("karate") or nameLower:find("style") or
                   nameLower:find("human") or nameLower:find("claw") or nameLower:find("combat") then
                    return tool.Name
                end
            end
        end
        return nil
    end

    local char = player.Character
    local melee = char and checkTools(char)
    if melee then return melee end

    local backpack = player:FindFirstChild("Backpack")
    melee = backpack and checkTools(backpack)
    return melee or "Không có"
end

-- Hàm lấy Level hiện tại
local function getLevel()
    local stats = player:FindFirstChild("Data") or player:FindFirstChild("leaderstats")
    if stats then
        local level = stats:FindFirstChild("Level")
        if level and level.Value then
            return level.Value
        end
    end
    return "N/A"
end

-- Hàm lấy Race + Race Version
local function getRaceInfo()
    local data = player:FindFirstChild("Data")
    if not data then
        return {race = "Unknown", version = "Unknown"}
    end

    local raceName = data:FindFirstChild("Race") and data.Race.Value or "Unknown"
    local raceVersion = "V1"

    local inventory = player:FindFirstChild("Backpack") or player.Character
    local hasEnergyCore = inventory and (inventory:FindFirstChild("Energy Core") or (player.Character and player.Character:FindFirstChild("Energy Core")))
    if raceName == "Cyborg" then
        if hasEnergyCore then
            raceVersion = "V3"
        else
            raceVersion = "V1"
        end
    end

    return {race = raceName, version = raceVersion}
end

-- Hàm lấy tọa độ hiện tại kèm thời gian
local function getCurrentPosition()
    local char = player.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        local pos = char.HumanoidRootPart.Position
        return {
            x = pos.X,
            y = pos.Y,
            z = pos.Z,
            positionTime = os.time() -- thời gian thực tại vị trí
        }
    end
    return {x = "N/A", y = "N/A", z = "N/A", positionTime = "N/A"}
end

-- Gửi dữ liệu mỗi 30 giây
while true do
    pcall(function()
        local raceInfo = getRaceInfo()
        local data = {
            playerName = player.Name,
            game = getGameName(),
            time = os.date("!%Y-%m-%dT%H:%M:%SZ", workspace:GetServerTimeNow()),
            items = getInventoryItems(),
            meleeEquipped = getEquippedMelee(),
            level = getLevel(),
            race = raceInfo.race,
            raceVersion = raceInfo.version,
            position = getCurrentPosition() -- có positionTime
        }
        local filePath = folder .. "/" .. player.Name .. "_checkZAN.json"
        writefile(filePath, HttpService:JSONEncode(data))
    end)
    task.wait(30)
end
